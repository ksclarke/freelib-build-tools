name: Maven Release

# Performs a Maven release when a new GitHub release has been published
on:
  release:
    types: [ published ]

jobs:
  publish:
    name: Maven Artifact Publisher
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ "17" ]
        maven: [ "3.8.6" ]
        jdk: [ "temurin" ]
    env:
      AUTORELEASE_ARTIFACT: ${{ secrets.AUTORELEASE_ARTIFACT }}
    steps:
      - name: Check out source code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          cache: maven
          distribution: ${{ matrix.jdk }}
          java-version: ${{ matrix.java }}
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Set up Maven
        uses: stCarolas/setup-maven@d6af6abeda15e98926a57b5aa970a96bb37f97d1 # v5
        if: ${{ env.ACT }}
        with:
          maven-version: ${{ matrix.maven }}

      - name: Set autorelease config
        if: env.AUTORELEASE_ARTIFACT == null
        run: echo "AUTORELEASE_ARTIFACT=false" >> $GITHUB_ENV

      - name: Release with Maven
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.BUILD_PASSPHRASE }}
          MAVEN_GPG_KEY: ${{ secrets.BUILD_KEY }}
        run: |
          mvn -V -ntp -B clean deploy -Prelease -DlogLevel=DEBUG -DtestLogLevel=DEBUG \
          -Drevision=${{ github.event.release.tag_name }} -Dautorelease.artifact=${{ env.AUTORELEASE_ARTIFACT }}
